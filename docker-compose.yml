version: '3.8'

services:
  db:
    image: postgres:16-alpine
    restart: always
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - "5435:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $${POSTGRES_USER} -d $${POSTGRES_DB}"]
      interval: 5s
      timeout: 5s
      retries: 10

  ui:
    build:
      context: .
      dockerfile: UI/Dockerfile
    restart: always
    ports:
      - "8080:8080"
    depends_on:
      db:
        condition: service_healthy
    environment:
       - ASPNETCORE_ENVIRONMENT=Development
       - ConnectionStrings__DefaultConnection=Host=db;Database=JobApplicationDb;Username=admin;Password=admin

  vue-ui:
    build:
      context: ./vue-ui
      dockerfile: Dockerfile
    restart: always
    ports:
      - "8081:80"
    depends_on:
      - ui

  api:
    build:
      context: .
      dockerfile: JobApplicationProject.Api/Dockerfile
    restart: unless-stopped
    expose:
      - "5000"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ConnectionStrings__DefaultConnection=Host=db;Database=JobApplicationDb;Username=admin;Password=admin
    depends_on:
      db:
        condition: service_healthy

volumes:
  pgdata: 